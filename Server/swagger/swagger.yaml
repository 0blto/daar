components:
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
            type: object
      description: Bad request
    InternalError:
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
            type: object
      description: Internal server error
  schemas:
    Health:
      properties:
        status:
          description: Health status
          example: Ok
          type: string
      required:
        - status
      type: object
    LoginRequest:
      properties:
        password:
          description: User's password
          type: string
        username:
          description: User's username
          type: string
      required:
        - password
        - username
      type: object
    LoginResponse:
      properties:
        message:
          description: Response message
          type: string
        token:
          description: JWT token
          type: string
        user:
          allOf:
            - $ref: '#/components/schemas/UserResponse'
          description: User information
      type: object
    Readiness:
      properties:
        error:
          description: Error message if any
          type: string
        status:
          description: Readiness status
          example: Ready
          type: string
      required:
        - status
      type: object
    Sku:
      properties:
        barcode:
          description: SKU barcode
          type: string
        price:
          description: SKU price
          nullable: true
          type: number
        price_image:
          description: Price image file (required if price is not provided)
          type: object
        sku_image:
          description: SKU image file
          type: object
        store:
          description: Store name
          nullable: true
          type: string
      required:
        - barcode
        - sku_image
      type: object
    SkuResponse:
      properties:
        id:
          description: Created SKU ID
          type: integer
        message:
          description: Response message
          type: string
        user_id:
          description: ID of the user who created the SKU
          type: integer
      type: object
    UserResponse:
      properties:
        id:
          description: User ID
          type: integer
        username:
          description: Username
          type: string
      type: object
info:
  description: API for offline price monitoring system
  title: Offline Price Monitoring API
  version: 1.0.0
openapi: 3.0.2
paths:
  /api/v1/health:
    get:
      description: Check if the service is healthy
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
          description: Service is healthy
  /api/v1/login:
    post:
      description: Authenticate user and get token
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: Login successful
        '400':
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                type: object
          description: Bad request - Missing credentials
        '401':
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                type: object
          description: Invalid credentials
  /api/v1/logout:
    post:
      description: Dummy endpoint for compatibility - client should discard token
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                type: object
          description: Logout successful
  /api/v1/ready:
    get:
      description: Check if the service is ready to handle requests
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Readiness'
          description: Service is ready
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Readiness'
          description: Service is not ready
  /api/v1/sku:
    post:
      description: Add a new SKU with images to the system
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sku'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuResponse'
          description: SKU created successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'
